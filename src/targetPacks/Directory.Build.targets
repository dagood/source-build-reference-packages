<Project>

  <Target Name="GetTargetingPackSrc">
    <ItemGroup>
      <TargetingPackSrc Include="**/*.il" />
      <!-- Temporarily skip files with 'constraint' token that isn't compatible with current ilasm. -->
      <TargetingPackSrc Remove="**/System.Data.Common.il" />
      <TargetingPackSrc Remove="**/System.Reflection.Metadata.il" />

      <NuGetGeneratedMetadataFile Include="
        .signature.p7s;
        _rels\**;
        [Content_Types].xml;
        " />

      <StructureFile
        Include="**\*.*"
        Exclude="
          @(TargetingPackSrc);
          **\*.csproj;
          @(NuGetGeneratedMetadataFile);
          "/>

      <StaticAssetFile
        Include="@(StructureFile)"
        Destination="$(TFMPackTempOutputDir)%(RecursiveDir)%(Filename)%(Extension)" />
    </ItemGroup>
  </Target>

  <Target Name="AssembleTargetPack"
          Condition="'$(SkipTargetingPacks)' != 'true' "
          DependsOnTargets="
            CopyStaticAssetsToOutput;
            BuildTargetingPackIlSrc" />
  
  <Target Name="CopyStaticAssetsToOutput"
          DependsOnTargets="GetTargetingPackSrc">
    <Error Condition="'$(TFMPackTempOutputDir)' == ''" Text="TFMPackTempOutputDir not defined" />

    <ItemGroup>
      <ExtraneousFile
        Include="$(TFMPackTempOutputDir)**"
        Exclude="@(StaticAssetFile -> '%(Destination)')"/>
    </ItemGroup>

    <Delete Files="@(ExtraneousFile)" />

    <Copy
      SourceFiles="@(StaticAssetFile)"
      DestinationFiles="@(StaticAssetFile -> '%(Destination)')" />
  </Target>

  <Target Name="BuildTargetingPackIlSrc"
          DependsOnTargets="GetTargetingPackSrc"
          Condition="'@(TargetingPackSrc)' != ''">
    <Message Importance="High" Text="[$([System.DateTime]::Now.ToString('HH:mm:ss.ff'))] Begin $(MSBuildProjectName) -> $(TFMPackTempOutputDir)..." />
    <MakeDir Directories="@(TargetingPackSrc->'$(TFMPackTempOutputDir)%(RecursiveDir)')" />

    <ItemGroup>
      <IndividualFileProject
        Include="$(MSBuildProjectFullPath)"
        Properties="
          IlFile=%(TargetingPackSrc.Identity);
          OutputFile=$(TFMPackTempOutputDir)%(TargetingPackSrc.RecursiveDir)%(TargetingPackSrc.Filename).dll" />
    </ItemGroup>

    <MSBuild
      Projects="@(IndividualFileProject)"
      Targets="BuildIlFile"
      BuildInParallel="false"
      StopOnFirstFailure="true" />

    <Message Importance="High" Text="[$([System.DateTime]::Now.ToString('HH:mm:ss.ff'))] $(MSBuildProjectName) -> $(TFMPackTempOutputDir) DONE" />
  </Target>

  <Target Name="BuildIlFile"
          DependsOnTargets="ResolveIlToolPaths">
    <!--
      Note: Use awk as hack below to not fill up build logs. Ilasm produces warning on validly
      disassembled il src. The awk expression eats just that warning.
    -->
    <Exec
      Command="set -o pipefail;$(IlasmDir)ilasm $(IlFile) -dll -quiet -nologo -output=$(OutputFile) |&amp; awk '!/warning : Method has no body/'"
      IgnoreStandardErrorWarningFormat="true"
      CustomErrorRegularExpression=": error : " />
  </Target>

  <Target Name="SetManualPackTaskInputs"
          BeforeTargets="_CalculateInputsOutputsForPack;GenerateNuspec">
    <PropertyGroup>
      <NuspecFile>$(TFMPackTempOutputDir)$(NuspecFile)</NuspecFile>
    </PropertyGroup>
  </Target>

  <Import Project="$([MSBuild]::GetPathOfFileAbove(Directory.Build.targets, $(MSBuildThisFileDirectory)..))" />

  <Target Name="Build"
          Condition="'$(SkipTargetingPacks)' != 'true'"
          DependsOnTargets="AssembleTargetPack" />

  <!--
    Disable Arcade util that populates PackTask properties. For these projects, the nuspec already
    contains everything. It's generated when the package is initially deconstructed and tends to be
    unique per package, so there's no benefit to this Arcade util.
  -->
  <Target Name="InitializeStandardNuspecProperties" />

</Project>
